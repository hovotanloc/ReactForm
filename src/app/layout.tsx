import type { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";
import { Refine, Authenticated } from "@refinedev/core";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import {
  ThemedLayout,
  useNotificationProvider,
  RefineSnackbarProvider,
  AuthPage,
} from "@refinedev/mui";
import routerProvider from "@refinedev/nextjs-router";

import { dataProvider } from "@providers/data-provider";
import { authProviderClient } from "@providers/auth-provider/auth-provider.client";
import { AppIcon } from "@components/app-icon";
import { ColorModeContextProvider } from "@contexts/color-mode";
import { Header } from "@components/header";
import { DevtoolsProvider } from "@providers/devtools";

export const metadata: Metadata = {
  title: "My Refine App",
  description: "Generated by refine + next.js",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const cookieStore = await cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    <html lang="en">
      <body>
        <ColorModeContextProvider defaultMode={defaultMode}>
          <RefineSnackbarProvider>
            <RefineKbarProvider>
              <Refine
                routerProvider={routerProvider}
                dataProvider={dataProvider}
                authProvider={authProviderClient}
                notificationProvider={useNotificationProvider}
                resources={[
                  {
                    name: "dashboard",
                    list: "/dashboard",
                  },
                  {
                    name: "category",
                    list: "/category",
                    create: "/category/create",
                    edit: "/category/edit/:id",
                    show: "/category/show/:id",
                    meta: {
                      canDelete: true,
                    }
                  },
                  {
                    name: "news",
                    list: "/news",
                    create: "/news/create",
                    edit: "/news/edit/:id",
                    show: "/news/show/:id",
                    meta: {
                      canDelete: true,
                    }
                  },
                ]}
                options={{
                  syncWithLocation: true,
                  warnWhenUnsavedChanges: true,
                  projectId: "bxXx6H-S0fFJB-pmUpoM",
                  title: { text: "React Project", icon: <AppIcon /> },
                }}
              >
                {children}
                <RefineKbar />
              </Refine>
            </RefineKbarProvider>
          </RefineSnackbarProvider>
        </ColorModeContextProvider>
      </body>
    </html>
  );
}
